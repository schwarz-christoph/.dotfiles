---
- name: Konfigurieren von Symlinks, Git-Repository aktualisieren und Programminstallation
  hosts: localhost
  vars:
    home_dir: "{{ ansible_env.HOME }}"
    dotfiles_repo: "git@github.com:schwarz-christoph/.dotfiles.git"
    dotfiles_dest: "{{ home_dir }}/.dotfiles"
    symlink_list:        
        - { src: "{{ home_dir }}/.dotfiles/.config/dunst/dunstrc", path: "{{ home_dir }}/.config/dunst/dunstrc" }
        - { src: "{{ home_dir }}/.dotfiles/.config/fontconfig/fonts.conf", path: "{{ home_dir }}/.config/fontconfig/fonts.conf" }
        - { src: "{{ home_dir }}/.dotfiles/.config/i3status-rust/config.toml", path: "{{ home_dir }}/.config/i3status-rust/config.toml" }
        - { src: "{{ home_dir }}/.dotfiles/.config/ranger/rc.conf", path: "{{ home_dir }}/.config/ranger/rc.conf" }
        - { src: "{{ home_dir }}/.dotfiles/.config/ranger/commands.py", path: "{{ home_dir }}/.config/ranger/commands.py" }
        - { src: "{{ home_dir }}/.dotfiles/.config/ranger/plugins", path: "{{ home_dir }}/.config/ranger/plugins" }
        - { src: "{{ home_dir }}/.dotfiles/.config/rofi", path: "{{ home_dir }}/.config/rofi" }
        - { src: "{{ home_dir }}/.dotfiles/.config/sway/config", path: "{{ home_dir }}/.config/sway/config" }
        - { src: "{{ home_dir }}/.dotfiles/.config/swaylock/config", path: "{{ home_dir }}/.config/swaylock/config" }
        - { src: "{{ home_dir }}/.dotfiles/.config/systemd/user/dunst.service", path: "{{ home_dir }}/.config/systemd/user/dunst.service" }
        - { src: "{{ home_dir }}/.dotfiles/.config/systemd/user/kanshi.service", path: "{{ home_dir }}/.config/systemd/user/kanshi.service" }
        - { src: "{{ home_dir }}/.dotfiles/.config/systemd/user/swayidle.service", path: "{{ home_dir }}/.config/systemd/user/swayidle.service" }
        - { src: "/dev/null", path: "{{ home_dir }}/.config/systemd/user/pipewire-session-manager.service" }
        - { src: "/dev/null", path: "{{ home_dir }}/.config/systemd/user/pulseaudio.service" }
        - { src: "{{ home_dir }}/.dotfiles/.config/systemd/user/sway-session.target", path: "{{ home_dir }}/.config/systemd/user/sway-session.target" }
        - { src: "{{ home_dir }}/.dotfiles/.config/systemd/user/sway-session.target.wants", path: "{{ home_dir }}/.config/systemd/user/sway-session.target.wants" }
        - { src: "{{ home_dir }}/.dotfiles/.config/tmuxinator/lldb.yml", path: "{{ home_dir }}/.config/tmuxinator/lldb.yml" }
        - { src: "{{ home_dir }}/.dotfiles/.config/xdg-desktop-portal-wlr/config", path: "{{ home_dir }}/.config/xdg-desktop-portal-wlr/config" }
        - { src: "{{ home_dir }}/.dotfiles/.config/waybar", path: "{{ home_dir }}/.config/waybar" }
        - { src: "{{ home_dir }}/.dotfiles/.bashrc", path: "{{ home_dir }}/.bashrc" }
        - { src: "{{ home_dir }}/.dotfiles/.gitconfig", path: "{{ home_dir }}/.gitconfig" }
        - { src: "{{ home_dir }}/.dotfiles/.gitignore_global", path: "{{ home_dir }}/.gitignore_global" }
        - { src: "{{ home_dir }}/.dotfiles/.p10k.zsh", path: "{{ home_dir }}/.p10k.zsh" }
        - { src: "{{ home_dir }}/.dotfiles/.profile", path: "{{ home_dir }}/.profile" }
        - { src: "{{ home_dir }}/.dotfiles/.tmux.conf", path: "{{ home_dir }}/.tmux.conf" }
        - { src: "{{ home_dir }}/.dotfiles/.zshrc", path: "{{ home_dir }}/.zshrc" }
        - { src: "{{ home_dir }}/.dotfiles/.config/nvim", path: "{{ home_dir }}/.config/nvim" }

  tasks:
    - name: Erstellen von Symlinks für Konfigurationsdateien
      become: yes
      block:
        - name: Stelle sicher, dass das Zielverzeichnis existiert
          file:
            path: "{{ item.path | dirname }}"
            state: directory
            mode: '0755'
          loop: "{{ symlink_list }}"

        - name: Erstelle Symlink
          file:
            src: "{{ item.src }}"
            dest: "{{ item.path }}"
            state: link
            force: yes
          loop: "{{ symlink_list }}"
    
    - name: Installieren von grundlegenden Programmen
      become: yes
      dnf:
        name: 
          - make
          - npm
          - go
          - rust
          - cargo
          - tmux
          - zsh
          - sway
          - swaylock
          - swayidle
          - waybar
          - polkit-gnome
          - grimshot
          - ranger
          - libsecret-devel
          - pip
          - neovim
        state: present

#    - name: "Install Git Credentials Helper"
#      block:
#        - name: Copy libsecret directory
#          command: cp -r /usr/share/doc/git/contrib/credential/libsecret ./libsecret
#
#        - name: Change directory to libsecret and make
#          command: make
#          args:
#            chdir: ./libsecret
#
#        - name: Copy git-credential-libsecret to /usr/local/bin
#          become: yes
#         command: cp git-credential-libsecret /usr/local/bin
#          args:
#            chdir: ./libsecret

#    - name: Klonen und Installieren von Dunst
#      block:
#        - name: Klonen des Dunst-Repositories
#          git:
#            repo: https://github.com/dunst-project/dunst.git
#            dest: "{{ home_dir }}/Downloads/dunst"
#            clone: yes
#            update: yes
#
#        - name: Kompilieren von Dunst
#          make:
#            chdir: "{{ home_dir }}/Downloads/dunst"
#
#        - name: Installieren von Dunst
#          become: yes
#          make:
#            chdir: "{{ home_dir }}/Downloads/dunst"
#            target: install
#
#        - name: Aufräumen nach der Installation
#          file:
#            path: "{{ home_dir }}/Downloads/dunst"
#            state: absent

    - name: Klonen und Installieren von rofi-wayland
      block:
        - name: Überprüfen, ob rofi installiert ist
          command: which rofi
          register: rofi_installed
          failed_when: rofi_installed.rc == 0
          changed_when: false
          ignore_errors: yes

        - name: Klonen des rofi-wayland Repositories
          git:
            repo: 'https://github.com/lbonn/rofi.git'
            dest: '{{ home_dir }}/workspace/other/rofi'
          when: rofi_installed is failed

        - name: Installieren von rofi-wayland
          become: yes
          shell: |
            meson setup build --prefix ${HOME}/.local && cd build && ninja install
          args:
            chdir: '{{ home_dir }}/workspace/other/rofi'
          when: rofi_installed is failed
    
    - name: Install go dependencies
      become: yes
      shell: go install {{ item }}@latest
      loop:
        - mvdan.cc/sh/v3/cmd/shfmt
        - gitlab.com/gitlab-org/cli/cmd/glab
        - github.com/Gelio/go-global-update
        - golang.org/x/tools/gopls
        - golang.org/x/lint/golint
        - golang.org/x/tools/cmd/goimports
      environment:
        GOPATH: /path/to/your/gopath

    - name: Install python dependencies
      become: yes
      ansible.builtin.pip:
        name: "{{ item }}"
        state: present
        extra_args: "--user --upgrade"
      loop:
        - thefuck
        - pylint
        - pyright
        - pynvim

    - name: Install rust dependencies
      become: yes
      community.general.cargo:
        name: "{{ item }}"
        state: present
      loop:
        - atuin
        - cargo-updater
        - git-delta
        - ripgrep
        - fd-find

    - name: "nerd-fonts: repository"
      git:
        repo: "https://github.com/ryanoasis/nerd-fonts.git"
        dest: "{{ home_dir }}/workspace/other/nerd-fonts"
        depth: 1
        clone: yes

    - name: "nerd-fonts: install"
      command: bash -c './install.sh'
      args:
        chdir: "{{ home_dir }}/workspace/other/nerd-fonts"
    - name: Clone packer.nvim repository into the specified directory
      git:
        repo: 'https://github.com/wbthomason/packer.nvim'
        dest: '~/.local/share/nvim/site/pack/packer/start/packer.nvim'
        version: 'HEAD'
        depth: 1
